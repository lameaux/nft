services:
  bro:
    image: ghcr.io/lameaux/bro:latest
    volumes:
      - ./bro-scenarios:/scenarios
  brod:
    image: ghcr.io/lameaux/bro:latest
    entrypoint: ["/brod"]
    command: ["--debug"]
    restart: "unless-stopped"
  mox:
    image: ghcr.io/lameaux/mox:latest
    command: ["--debug", "--configPath=/config"]
    ports:
      - "8080:8080"
      - "9090:9090"
    volumes:
      - ./mox-config:/config
    restart: "unless-stopped"
  nginx:
    image: nginx:alpine
    ports:
      - "8282:80"
    volumes:
      - ./nginx/html:/usr/share/nginx/html:ro
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    restart: "unless-stopped"
    depends_on:
      - mox
  golang-stdlib:
    image: ghcr.io/lameaux/nft/apps/httpserver/golang/stdlib:latest
    ports:
      - "8081:8080"
    restart: "unless-stopped"
  java-netty:
    image: ghcr.io/lameaux/nft/apps/httpserver/java/netty:latest
    ports:
      - "8082:8080"
    restart: "unless-stopped"
  java-quarkus:
    image: ghcr.io/lameaux/nft/apps/httpserver/java/quarkus:latest
    ports:
      - "8083:8080"
    restart: "unless-stopped"
  rust-axum:
    image: ghcr.io/lameaux/nft/apps/httpserver/rust/axum:latest
    ports:
      - "8084:8080"
    restart: "unless-stopped"
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9191:9090"
    restart: "unless-stopped"
    volumes:
      - ./prometheus-config:/etc/prometheus
      - prom_data:/prometheus
  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    restart: "unless-stopped"
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    volumes:
      - ./grafana-config:/etc/grafana/provisioning
volumes:
  prom_data: